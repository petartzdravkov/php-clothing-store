(undo-tree-save-format-version . 1)
"51bcb3c13596cd0e3fc2bbd5079baae536c454b0"
[nil nil nil nil (26533 55514 775588 885000) 0 nil]
([nil nil ((nil fontified nil 253 . 254) (nil font-lock-face web-mode-html-tag-bracket-face 252 . 253) (nil fontified nil 252 . 253) (nil font-lock-face web-mode-html-tag-face 248 . 252) (nil fontified nil 248 . 252) (nil font-lock-face web-mode-html-tag-bracket-face 247 . 248) (nil fontified nil 247 . 248) (nil font-lock-face web-mode-html-tag-bracket-face 246 . 247) (nil fontified nil 246 . 247) (nil fontified nil 245 . 246) (nil font-lock-face web-mode-html-tag-bracket-face 244 . 245) (nil fontified nil 244 . 245) (nil font-lock-face web-mode-html-tag-face 240 . 244) (nil fontified nil 240 . 244) (nil font-lock-face web-mode-html-tag-bracket-face 239 . 240) (nil fontified nil 239 . 240) (nil font-lock-face web-mode-html-tag-bracket-face 238 . 239) (nil fontified nil 238 . 239) (nil fontified nil 233 . 238) (nil font-lock-face web-mode-html-tag-bracket-face 232 . 233) (nil fontified nil 232 . 233) (nil font-lock-face web-mode-html-tag-face 226 . 232) (nil fontified nil 226 . 232) (nil font-lock-face web-mode-html-tag-bracket-face 225 . 226) (nil fontified nil 225 . 226) (nil font-lock-face web-mode-html-tag-bracket-face 224 . 225) (nil fontified nil 224 . 225) (nil font-lock-face web-mode-html-tag-bracket-face 223 . 224) (nil fontified nil 223 . 224) (nil font-lock-face web-mode-html-attr-value-face 222 . 223) (nil fontified nil 222 . 223) (nil font-lock-face web-mode-html-attr-value-face 212 . 222) (nil fontified nil 212 . 222) (nil font-lock-face web-mode-html-attr-equal-face 211 . 212) (nil fontified nil 211 . 212) (nil font-lock-face web-mode-html-attr-name-face 201 . 211) (nil fontified nil 201 . 211) (nil font-lock-face web-mode-html-attr-name-face 200 . 201) (nil fontified nil 200 . 201) (nil fontified nil 199 . 200) (nil font-lock-face web-mode-html-attr-value-face 198 . 199) (nil fontified nil 198 . 199) (nil font-lock-face web-mode-html-attr-value-face 126 . 198) (nil fontified nil 126 . 198) (nil font-lock-face web-mode-html-attr-equal-face 125 . 126) (nil fontified nil 125 . 126) (nil font-lock-face web-mode-html-attr-name-face 117 . 125) (nil fontified nil 117 . 125) (nil font-lock-face web-mode-html-attr-name-face 116 . 117) (nil fontified nil 116 . 117) (nil fontified nil 115 . 116) (nil font-lock-face web-mode-html-attr-value-face 114 . 115) (nil fontified nil 114 . 115) (nil font-lock-face web-mode-html-attr-value-face 37 . 114) (nil fontified nil 37 . 114) (nil font-lock-face web-mode-html-attr-equal-face 36 . 37) (nil fontified nil 36 . 37) (nil font-lock-face web-mode-html-attr-name-face 34 . 36) (nil fontified nil 34 . 36) (nil font-lock-face web-mode-html-attr-name-face 33 . 34) (nil fontified nil 33 . 34) (nil fontified nil 32 . 33) (nil font-lock-face web-mode-html-tag-face 26 . 32) (nil fontified nil 26 . 32) (nil font-lock-face web-mode-html-tag-bracket-face 25 . 26) (nil fontified nil 25 . 26) (nil fontified nil 23 . 25) (nil font-lock-face web-mode-comment-face 22 . 23) (nil fontified nil 22 . 23) (nil font-lock-face web-mode-comment-face 3 . 22) (nil fontified nil 3 . 22) (nil font-lock-face web-mode-comment-face 2 . 3) (nil fontified nil 2 . 3) (nil fontified nil 1 . 2) (1 . 254) (t 26533 12582 445720 539000)) nil (26533 55514 775584 989000) 0 nil])
([nil nil ((2 . 8) (#("	" 0 1 (fontified nil)) . 2) (1 . 2) (t 26533 55514 775449 607000)) nil (26533 55521 966795 649000) 0 nil])
([nil nil ((1 . 9) (t 26533 55521 966416 889000)) nil (26533 55639 237590 28000) 0 nil])
([nil nil ((apply yas--snippet-revive 9 18 #s(yas--snippet nil nil #s(yas--exit 9 nil) 2 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil #s(yas--exit 9 nil) 2 nil nil nil nil)) (9 . 18) (#("</footer>" 0 9 (fontified nil)) . -9) (9 . 18)) nil (26533 55639 237589 406000) 0 nil])
([nil nil ((12 . 16) (#("    " 0 4 (fontified nil)) . 11) (undo-tree-id0 . -4) (11 . 16) (#("    " 0 4 (fontified nil)) . 10) (undo-tree-id1 . -4) (9 . 15)) nil (26533 55639 237588 351000) 0 nil])
([nil nil ((11 . 15)) nil (26533 55639 237576 460000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . -54) (#("    " 0 4 (fontified t)) . -16) 1) nil (26533 55639 237573 317000) 0 nil])
([nil nil ((10 . 14) (t 26533 55639 236883 347000)) nil (26533 55665 313164 774000) 0 nil])
([nil nil ((26 . 27) (25 . 27) (#("\"" 0 1 (tag-type start tag-name "div")) . -25) (15 . 26) (14 . 16) (#("<" 0 1 (fontified t)) . -14) (14 . 15)) nil (26533 55665 313164 235000) 0 nil])
([nil nil ((#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -26) (undo-tree-id6 . -1) 27) nil (26533 55665 313163 566000) 0 nil])
([nil nil ((26 . 33)) nil (26533 55665 313162 431000) 0 nil])
([nil nil ((#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -32) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 33) nil (26533 55665 313161 954000) 0 nil])
([nil nil ((">" . 37) (36 . 37) (#(">" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-end t tag-type start tag-name "div")) . -36) (36 . 37) (#("\"" 0 1 (tag-type start tag-name "div")) . 36) (35 . 36) (#("\"" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr-end 5 tag-attr t)) . -35) (32 . 36)) nil (26533 55665 313159 648000) 0 nil])
([nil nil ((39 . 40) ("	" . 38) (undo-tree-id2 . -1) (37 . 40)) nil (26533 55665 313158 704000) 0 nil])
([nil nil ((41 . 44) (40 . 42) ("<" . -40) (40 . 41)) nil (26533 55665 313151 367000) 0 nil])
([nil nil ((44 . 45)) nil (26533 55665 313150 407000) 0 nil])
([nil nil (("	" . -43) (43 . 44) ("	" . 43) (39 . 43) 46) nil (26533 55665 313146 485000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -49) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#(" " 0 1 (fontified t)) . -50) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (#(" " 0 1 (fontified t)) . -51) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#(" " 0 1 (fontified t)) . -52) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#(" " 0 1 (fontified t)) . -53) (undo-tree-id23 . -1) (undo-tree-id24 . -1) 54 (t 26533 55665 312764 740000)) nil (26533 55735 294529 574000) 0 nil])
([nil nil ((38 . 39)) nil (26533 55735 294515 751000) 0 nil])
([nil nil ((40 . 50) (39 . 41) ("<" . -39) (39 . 40)) nil (26533 55735 294515 269000) 0 nil])
([nil nil ((#(":" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr-end 5 tag-attr t)) . -48) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr-end 5 tag-attr t)) . -49) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) 50) nil (26533 55735 294514 398000) 0 nil])
([nil nil ((#("\"" 0 1 (tag-type start tag-name "p")) . 54) (49 . 54) (48 . 50) (#("\"" 0 1 (tag-type start tag-name "p")) . -48) (48 . 49)) nil (26533 55735 294510 589000) 0 nil])
([nil nil ((55 . 64)) nil (26533 55735 294509 995000) 0 nil])
([nil nil (("t" . -63) (undo-tree-id7 . -1) 64) nil (26533 55735 294509 395000) 0 nil])
([nil nil ((63 . 73)) nil (26533 55735 294501 909000) 0 nil])
([nil nil ((93 . 95) ("<" . -93) (73 . 94)) nil (26533 55735 294500 972000) 0 nil])
([nil nil ((">" . 97) (94 . 97)) nil (26533 55735 294497 615000) 0 nil])
([nil nil ((8 . 15) (t 26533 55735 294446 338000)) nil (26533 55823 14927 954000) 0 nil])
([nil nil ((16 . 27) (15 . 17) (#("\"" 0 1 (tag-type start tag-name "footer" fontified t)) . -15) (15 . 16)) nil (26533 55823 14927 411000) 0 nil])
([nil nil ((#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "footer" tag-attr t)) . -26) (undo-tree-id28 . -1) 27) nil (26533 55823 14926 871000) 0 nil])
([nil nil ((26 . 30)) nil (26533 55823 14925 834000) 0 nil])
([nil nil ((#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "footer" tag-attr t)) . -27) (undo-tree-id25 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "footer" tag-attr t)) . -28) (undo-tree-id26 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "footer" tag-attr t)) . -29) (undo-tree-id27 . -1) 30) nil (26533 55823 14924 471000) 0 nil])
([nil nil ((27 . 33)) nil (26533 55823 14912 82000) 0 nil])
([nil nil ((#("p" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "footer" tag-attr t)) . -16) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "footer" tag-attr t)) . -17) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (#("s" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "footer" tag-attr t)) . -18) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "footer" tag-attr t)) . -19) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "footer" tag-attr t)) . -20) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "footer" tag-attr t)) . -21) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#("o" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "footer" tag-attr t)) . -22) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#("n" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "footer" tag-attr t)) . -23) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (#("-" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "footer" tag-attr t)) . -24) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (#("r" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "footer" tag-attr t)) . -25) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "footer" tag-attr t)) . -26) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "footer" tag-attr t)) . -27) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "footer" tag-attr t)) . -28) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#("t" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "footer" tag-attr t)) . -29) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (#("i" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "footer" tag-attr t)) . -30) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (#("v" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "footer" tag-attr t)) . -31) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "footer" tag-attr t)) . -32) (undo-tree-id76 . -1) (undo-tree-id77 . -1) 33 (t 26533 55823 14047 247000)) nil (26533 55949 875270 148000) 0 nil])
([nil nil ((16 . 23)) nil (26533 55949 875412 395000) 0 nil])
([nil nil ((#("p" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "footer" tag-attr t)) . -22) (undo-tree-id78 . -1) 23) nil (26533 55951 278044 46000) 0 nil] [nil nil ((#("<footer class=\"mt-autp" 0 1 (font-lock-face web-mode-html-tag-bracket-face tag-beg 17 tag-type start tag-name "footer" fontified t) 1 2 (font-lock-face web-mode-html-tag-face tag-type start tag-name "footer" fontified t) 2 3 (font-lock-face web-mode-html-tag-face tag-type start tag-name "footer" fontified t) 3 4 (font-lock-face web-mode-html-tag-face tag-type start tag-name "footer" fontified t) 4 5 (font-lock-face web-mode-html-tag-face tag-type start tag-name "footer" fontified t) 5 6 (font-lock-face web-mode-html-tag-face tag-type start tag-name "footer" fontified t) 6 7 (font-lock-face web-mode-html-tag-face tag-type start tag-name "footer" fontified t) 7 8 (tag-type start tag-name "footer" fontified t) 8 9 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "footer" tag-attr t tag-attr-beg 0 fontified t) 9 10 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "footer" tag-attr t fontified t) 10 11 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "footer" tag-attr t fontified t) 11 12 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "footer" tag-attr t fontified t) 12 13 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "footer" tag-attr t fontified t) 13 14 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "footer" tag-attr t fontified t) 14 22 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "footer" tag-attr t)) . -1) (undo-tree-id29 . -15) (undo-tree-id30 . -20) (undo-tree-id31 . -7) (undo-tree-id32 . -7) (undo-tree-id33 . -20) (undo-tree-id34 . -20) (undo-tree-id35 . -20) (undo-tree-id36 . -20) (undo-tree-id37 . -20) (undo-tree-id38 . -20) (undo-tree-id39 . -20) (undo-tree-id40 . -22) (undo-tree-id41 . -20) (undo-tree-id42 . -21) (undo-tree-id43 . -21) 23) ((1 . 23)) (26533 55949 875256 749000) 0 nil])
([nil nil ((22 . 23)) nil (26533 55951 278033 884000) 0 nil])
nil
([nil nil ((#(" " 0 1 (tag-type start tag-name "p")) . -57) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (#("c" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr-end 0 tag-attr t tag-attr-beg 0)) . -58) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr-end 0 tag-attr t)) . -59) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (#("a" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr-end 0 tag-attr t)) . -60) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (#("s" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr-end 0 tag-attr t)) . -61) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (#("s" 0 1 (font-lock-face web-mode-html-attr-name-face tag-type start tag-name "p" tag-attr-end 0 tag-attr t)) . -62) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (#("=" 0 1 (font-lock-face web-mode-html-attr-equal-face tag-type start tag-name "p" tag-attr-end 5 tag-attr t)) . -63) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (#("\"" 0 1 (tag-type start tag-name "p")) . -64) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (#("\"" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr-end 5 tag-attr t)) . 65) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (#("l" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -65) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -66) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (#("a" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -67) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (#("d" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "p" tag-attr t)) . -68) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) 69 (t 26533 55951 287463 659000)) nil (26533 55964 683382 192000) 0 nil])
([nil nil ((59 . 61) (58 . 60) ("<" . -58) (58 . 59) (t 26533 55964 683402 709000)) nil (26533 56017 631225 54000) 0 nil])
([nil nil ((#("a" 0 1 (font-lock-face web-mode-html-tag-face tag-type start tag-name "sa")) . -60) (undo-tree-id292 . -1) 61) nil (26533 56017 631224 377000) 0 nil])
([nil nil ((60 . 64)) nil (26533 56017 631223 525000) 0 nil])
([nil nil ((103 . 106) (102 . 104) ("<" . -102) (102 . 103)) nil (26533 56017 631223 38000) 0 nil])
([nil nil ((#("a" 0 1 (font-lock-face web-mode-html-tag-face tag-type end tag-name "sa")) . -105) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) 106) nil (26533 56017 631222 243000) 0 nil])
([nil nil ((105 . 109)) nil (26533 56017 631220 581000) 0 nil])
([nil nil ((#(";" 0 1 (tag-type end tag-name "sma")) . -107) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (#(";" 0 1 (tag-type end tag-name "sma")) . -108) (undo-tree-id288 . -1) 109) nil (26533 56017 631219 322000) 0 nil])
([nil nil ((107 . 109)) nil (26533 56017 631207 409000) 0 nil])
([nil nil ((" " . 110) (t 26533 56017 631161 814000)) nil (26533 56023 125045 802000) 0 nil])
([nil nil ((102 . 103)) nil (26533 56023 125042 486000) 0 nil])
([nil nil ((51 . 64) (t 26533 56023 125136 819000)) nil (26533 56034 883562 219000) 0 nil])
([nil current ((#("e" 0 1 (font-lock-face web-mode-html-attr-value-face tag-type start tag-name "div" tag-attr t)) . -63) (undo-tree-id293 . -1) 64) nil (26533 56034 883560 46000) 0 nil])
nil
